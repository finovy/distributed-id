server:
  port: 8080

spring:
  application:
    name: distributed-id
  main:
    allow-bean-definition-overriding: true
    allow-circular-references: true
  config:
    import:
      - optional:nacos:${APPLICATION_NAME:distributed-id}.yaml
  cloud:
    nacos:
      username: ${NACOS_USERNAME:}
      password: ${NACOS_PASSWORD:}
      config:
        server-addr: ${NACOS_CONFIG_SERVER_ADDR:127.0.0.1:8848}
        namespace: ${NACOS_CONFIG_NAMESPACE:}
        file-extension: yaml
        maxRetry: 10
        shared-configs:
          - data-id: base-config.yaml
            refresh: true
      discovery:
        server-addr: ${NACOS_DISCOVERY_SERVER_ADDR:127.0.0.1:8848}
        namespace: ${NACOS_DISCOVERY_NAMESPACE:}
        enabled: true

distributed:
  # 数据库相关配置，如果只开启了 snowflake则可不配置此项
  datasource:
    url: jdbc:mysql://127.0.0.1:3306/tinode?useUnicode=true&characterEncoding=UTF-8&useSSL=false&allowPublicKeyRetrieval=true&zeroDateTimeBehavior=convertToNull&serverTimezone=GMT%2B0
    password:
    username:
  redis:
    # 控制redis方式是否开启，开启则需要 framework-core-redis 配置
    enable: true
  segment:
    # 控制号段模式是否开启
    enable: true
  snowflake:
    # 控制雪花模式是否开启
    enable: true
    zookeeper:
      address: 127.0.0.1:2181

dubbo:
  registry:
    enable-empty-protection: true
    session: 3000
    timeout: 20000
    username:
    password:
    address: nacos://127.0.0.1:8848
    parameters:
      namespace:
      group:
  metadata-report:
    timeout: 20000
    address: nacos://127.0.0.1:8848
    parameters:
      namespace:
      group:
  config-center:
    namespace:
    address: nacos://127.0.0.1:8848
  consumer:
    check: false
  provider:
    check: false
    threads: 400

# grpc
grpc:
  server:
    port: 9090
    enable-keep-alive: true

logging:
  config: classpath:logback-spring.xml
